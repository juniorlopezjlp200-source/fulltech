Proyecto: Implementación del programa de afiliados para la aplicación de catálogo de FULLTECH.

1. Visión General del Proyecto
El objetivo es desarrollar un sistema de referidos semi-automático que incentive a los usuarios existentes ("Socios") a promover la aplicación y productos de FULLTECH. Los Socios ganarán una comisión en forma de crédito acumulable por cada nuevo cliente que adquieran y complete su primera compra. El sistema rastreará a los referidos mediante un enlace único, pero la confirmación de la venta se gestionará manualmente por un administrador a través de un panel, dado que el proceso de venta finaliza en WhatsApp.

2. Reglas de Negocio Fundamentales
Comisión para el Socio: 5% del valor total de la compra (antes de impuestos y sin incluir costos de envío).

Recompensa del Socio: La comisión se acumula como "Crédito en Tienda" en el balance del Socio.

Incentivo para el Cliente Referido: 10% de descuento aplicable únicamente en su primera compra.

Condición de Validez: La comisión se genera exclusivamente por la primera compra exitosa de un nuevo cliente. Un nuevo cliente es definido como una persona que nunca ha realizado una compra previa en FULLTECH. Compras subsecuentes de este cliente no generarán más comisiones para el Socio.

3. Flujo de Usuario y Arquitectura del Sistema
Fase 1: Conversión de Usuario a Socio

Activación: Un usuario no registrado en el programa verá un pop-up o banner en la app invitándolo a unirse a "FULLTECH Rewards".

Registro: El usuario se registra utilizando un método de autenticación simple (se recomienda Google OAuth para minimizar la fricción).

Generación de Identidad de Socio: Al completar el registro, el sistema deberá:

Crear una entrada para el usuario en la tabla Usuarios.

Generar un codigo_referido único y alfanumérico (ej: FT-7G3X1P).

Inicializar saldo_actual y ganancias_totales en 0.00.

Onboarding: El usuario es redirigido a su nuevo "Panel de Socio", donde se le presenta su código, su enlace y las instrucciones.

Fase 2: El Proceso de Referencia

Compartir Contenido: El Socio utiliza los botones de "Compartir" dentro de la app (sea para la app completa o un producto específico).

Generación del Link Inteligente: La aplicación genera dinámicamente un enlace único que incluye el código del socio como un parámetro URL.

Formato del Link: https://[dominio_app] / [ruta_producto]?ref=[codigo_referido]

Rastreo (Tracking):

Un nuevo cliente (el "Referido") hace clic en el link.

La aplicación detecta la presencia del parámetro ?ref= en la URL.

La aplicación almacena el codigo_referido en el almacenamiento local del navegador del Referido (Local Storage es preferible a una cookie por su persistencia). Este valor debe tener una caducidad de al menos 30 días.

Fase 3: El Puente App-WhatsApp y la Creación del Prospecto

Inicio de Contacto: El Referido navega por la app y presiona el botón "Pedir por WhatsApp".

Llamada al Servidor: Antes de abrir WhatsApp, la aplicación debe realizar una llamada asíncrona (API call) al backend para crear un registro en la tabla Referidos.

Datos a enviar: El codigo_referido guardado en el Local Storage.

Acción del backend: Crear una nueva entrada en Referidos con el id_socio correspondiente y el estado inicializado en "pendiente".

Apertura de WhatsApp: La app genera el mensaje pre-escrito para WhatsApp, incluyendo el código de referido para una doble verificación manual.

Fase 4: Confirmación y Acreditación (Panel de Administración)

Cierre de Venta: El Administrador de FULLTECH finaliza la venta con el Referido vía WhatsApp.

Gestión en el Panel Admin: El Administrador accede a la sección "Referidos Pendientes".

Acción de Confirmar: El Admin localiza al referido en la lista y hace clic en [Confirmar Venta].

Entrada de Datos: Se abre un modal donde el Admin debe ingresar dos datos:

monto_venta_final: El valor total de la compra.

nombre_nuevo_cliente: Para registro histórico.

Procesamiento Automático: Al hacer clic en "Aplicar", el sistema ejecuta las siguientes acciones en una única transacción de base de datos para garantizar la integridad:

Actualiza el registro en la tabla Referidos:

estado cambia a "completado".

Guarda el monto_venta y calcula el monto_comision (5%).

Guarda la fecha_completado.

Actualiza el registro en la tabla Usuarios del Socio:

saldo_actual = saldo_actual + monto_comision.

ganancias_totales = ganancias_totales + monto_comision.

(Opcional) Envía una notificación al Socio.

Fase 5: Gestión de Pagos a Socios

Solicitud de Pago: El Socio acumula crédito y solicita un pago (el mecanismo de solicitud puede ser manual por WhatsApp o a través de un botón en su panel).

Registro del Pago en Panel Admin: El Administrador realiza el pago al Socio por el medio acordado (transferencia, etc.).

Acción de Registrar Pago: El Admin va a la "Gestión de Socios", busca al Socio y hace clic en [Registrar Pago].

Confirmación de Monto: Ingresa el monto exacto que fue pagado.

Procesamiento del Pago: El sistema ejecuta las siguientes acciones:

Crea un nuevo registro en la tabla Pagos con el id_socio, monto_pagado y fecha_pago.

Actualiza el saldo_actual del Socio en la tabla Usuarios: saldo_actual = saldo_actual - monto_pagado. El campo ganancias_totales NO se modifica.

4. Especificaciones Técnicas Detalladas
4.1. Interfaz de Usuario (UI/UX) - Panel del Socio

Dashboard Principal:

Código de Referido: Presentado de forma prominente. Botón para copiar con un solo clic.

Enlace de Referido General: https://[dominio_app]?ref=[codigo_referido]. Botón para copiar y botón para compartir que genere un mensaje genérico.

Métricas Principales (en tarjetas claras):

Saldo Actual: Grande y claro. (Ej: RD$ 750.00).

Ganancias de por Vida: Para motivación. (Ej: RD$ 3,500.00).

Referidos Completados: Número total.

Clics en Enlace: (Opcional, si se implementa un contador de clics).

Pestaña/Sección "Mis Referidos":

Sub-Pestaña "Pendientes": Tabla con columnas: Fecha de Contacto, Estado ("En espera de compra").

Sub-Pestaña "Completados": Tabla con columnas: Fecha de Compra, Nombre del Referido, Monto de la Venta, Comisión Ganada.

Pestaña/Sección "Mis Pagos":

Tabla con el historial de pagos recibidos. Columnas: Fecha de Pago, Monto Pagado.

4.2. Interfaz de Usuario (UI/UX) - Panel de Administración

Dashboard Principal: Resumen rápido: Total de comisiones pendientes, total pagado en el mes, etc.

Sección "Referidos Pendientes":

Tabla con todos los referidos en estado "pendiente".

Columnas: Fecha de Contacto, Código del Socio, Nombre del Socio.

Acciones por fila: [Confirmar Venta], [Cancelar Referido]. El botón cancelar cambia el estado a "cancelado" (ej: el cliente no compró).

Sección "Gestión de Socios":

Tabla con todos los usuarios registrados como Socios.

Columnas: Nombre del Socio, Código, Saldo Actual, Ganancias Totales.

Acciones por fila: [Registrar Pago], [Ver Historial].

Sección "Historial Global de Referidos":

Una tabla maestra con todos los referidos (pendientes, completados, cancelados) con opciones de búsqueda y filtrado por socio o fecha.

4.3. Modelo de la Base de Datos (SQL-like)

SQL

-- Tabla para todos los usuarios, incluyendo socios
CREATE TABLE Usuarios (
    id_usuario INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255), -- Si se usa login tradicional
    oauth_provider VARCHAR(50), -- 'google', etc.
    oauth_id VARCHAR(255),
    codigo_referido VARCHAR(20) UNIQUE, -- Se genera al hacerse socio
    saldo_actual DECIMAL(10, 2) DEFAULT 0.00,
    ganancias_totales DECIMAL(10, 2) DEFAULT 0.00,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla para rastrear cada intento de referido
CREATE TABLE Referidos (
    id_referido INT PRIMARY KEY AUTO_INCREMENT,
    id_socio INT,
    nombre_nuevo_cliente VARCHAR(255),
    estado ENUM('pendiente', 'completado', 'cancelado') NOT NULL DEFAULT 'pendiente',
    monto_venta DECIMAL(10, 2),
    monto_comision DECIMAL(10, 2),
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_completado TIMESTAMP,
    FOREIGN KEY (id_socio) REFERENCES Usuarios(id_usuario)
);

-- Tabla para registrar los pagos realizados a los socios
CREATE TABLE Pagos (
    id_pago INT PRIMARY KEY AUTO_INCREMENT,
    id_socio INT,
    monto_pagado DECIMAL(10, 2) NOT NULL,
    fecha_pago TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    metodo_pago VARCHAR(100), -- Opcional: Transferencia, etc.
    nota_admin TEXT, -- Opcional
    FOREIGN KEY (id_socio) REFERENCES Usuarios(id_usuario)
);

4.4. Endpoints de la API (Sugerencia)

POST /api/rewards/register: Para registrar a un usuario como Socio.

POST /api/referrals/track: Endpoint que la app llama cuando un referido presiona "Pedir por WhatsApp". Crea el referido "pendiente".

GET /api/partner/dashboard: Devuelve las estadísticas para el panel del Socio.

GET /admin/referrals/pending: Devuelve la lista de referidos pendientes para el panel de admin.

POST /admin/referrals/confirm: El endpoint que se llama para confirmar una venta. Recibe id_referido y monto_venta.

POST /admin/payments/register: Registra un pago a un Socio. Recibe id_socio y monto_pagado.